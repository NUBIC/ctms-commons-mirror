<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"
			value="/hibernate.properties" />
	</bean>

<!--
		p:maxActive="5" p:maxIdle="2" p:maxWait="180000"
		p:removeAbandoned="true" p:removeAbandonedTimeout="300"
		p:logAbandoned="true" p:validationQuery="SELECT 1 from identifier"
		p:testWhileIdle="true" p:testOnReturn="true"
		p:timeBetweenEvictionRunsMillis="300000"
		p:minEvictableIdleTimeMillis="600000"
-->

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="${hibernate.connection.driver_class}"

		p:url="${hibernate.connection.url}"
		p:username="${hibernate.connection.username}"
		p:password="${hibernate.connection.password}" />
<!--
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${hibernate.connection.driver_class}"/>
		<property name="url" value="${hibernate.connection.url}"/>
		<property name="username" value="${hibernate.connection.username}"/>
		<property name="password" value="${hibernate.connection.password}"/>
	</bean>		
-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		autowire="byName">
		<property name="annotatedClasses">
			<list>
				<value>gov.nih.nci.security.acegi.acls.dao.beans.AclEntryBean</value>
				<value>gov.nih.nci.security.acegi.acls.dao.beans.AclObjectIdentityBean</value>
				<value>gov.nih.nci.security.acegi.acls.dao.beans.AclSidBean</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven proxy-target-class="true" />

	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="checkWriteOperations">
			<value>true</value>
		</property>
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="daoTemplate" abstract="true">
		<property name="hibernateTemplate">
			<ref local="hibernateTemplate" />
		</property>
	</bean>

	<bean id="mutableAclDao" parent="daoTemplate"
		class="gov.nih.nci.security.acegi.acls.dao.impl.MutableAclDaoImpl" autowire="byName" />


	<bean id="aclCache"
		class="gov.nih.nci.security.acegi.acls.dao.impl.EhCacheBasedAclCache">
		<constructor-arg>
			<bean
				class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheManager">
					<bean
						class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
				</property>
				<property name="cacheName">
					<value>aclCache</value>
				</property>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="lookupStrategy"
		class="gov.nih.nci.security.acegi.acls.dao.impl.BasicAclLookupStrategy"
		parent="daoTemplate">

		<property name="aclCache" ref="aclCache" />
		<property name="aclAuthorizationStrategy"
			ref="aclAuthorizationStrategy" />
		<property name="auditLogger">
			<bean
				class="org.acegisecurity.acls.domain.ConsoleAuditLogger" />
		</property>
		<property name="batchSize" value="10" />

	</bean>


	<bean id="aclAuthorizationStrategy"
		class="org.acegisecurity.acls.domain.AclAuthorizationStrategyImpl">
		<constructor-arg>
			<list>
				<bean class="org.acegisecurity.GrantedAuthorityImpl">
					<constructor-arg value="ROLE_ADMINISTRATOR" />
				</bean>
				<bean class="org.acegisecurity.GrantedAuthorityImpl">
					<constructor-arg value="ROLE_ADMINISTRATOR" />
				</bean>
				<bean class="org.acegisecurity.GrantedAuthorityImpl">
					<constructor-arg value="ROLE_ADMINISTRATOR" />
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="aclService"
		class="gov.nih.nci.security.acegi.acls.service.DelegatingMutableAclService">
		<property name="service" ref="mutableAclDao" />
	</bean>


	<!-- Automatically receives AuthenticationEvent messages from DaoAuthenticationProvider -->
	<bean id="authenticationLoggerListener"
		class="org.acegisecurity.event.authentication.LoggerListener" />

	<!-- Automatically receives AuthenticationEvent messages from AbstractSecurityInterceptor -->
	<bean id="secureObjectLoggerListener"
		class="org.acegisecurity.event.authorization.LoggerListener" />

	<!-- Setup a cache we can use in tests of the caching layer -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache-failsafe.xml</value>
		</property>
	</bean>

	<bean id="eHCacheBackend"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager" />
		</property>
		<property name="cacheName">
			<value>testingCache</value>
		</property>
	</bean>


</beans>
